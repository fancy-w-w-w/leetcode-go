package digit

const (
	m1  = 0x55555555 // 01010101010101010101010101010101
	m2  = 0x33333333 // 00110011001100110011001100110011
	m4  = 0x0f0f0f0f // 00001111000011110000111100001111
	m8  = 0x00ff00ff // 00000000111111110000000011111111
	m16 = 0x0000ffff
)

// ReverseBits 颠倒给定的 32 位无符号整数的二进制位。
func ReverseBits(num uint32) uint32 {
	// 奇数byte右移一位 偶数byte坐移一位，插入	// 假如源数据12345678
	num = num>>1&m1 | num&m1<<1 // 21436587
	// 两位平移置换
	num = num>>2&m2 | num&m2<<2 // 43218765
	num = num>>4&m4 | num&m4<<4 // 87654321 完成
	num = num>>8&m8 | num&m8<<8
	num = num>>16&m16 | num&m16<<16
	return num
}
